{"version":3,"sources":["js/carousel.js","js/carouselDesign.js","js/carouselDesignAlt.js","js/navAnimation.js","js/form1.js","js/form2.js","js/form3.js","js/carouselDesign3.js","js/main.js"],"names":["carousel","document","documentElement","content","querySelector","i","appendChild","children","cloneNode","carouselDesign","track","slides","Array","from","nextButton","prevButton","dotsNav","dots","slideSize","getBoundingClientRect","slideWidth","width","height","forEach","slide","index","style","left","moveToSlide","currentSlide","targetSlide","transform","classList","remove","add","updateDots","currentDot","targetDot","hideShowArrows","targetIndex","length","addEventListener","e","prevSlide","previousElementSibling","prevDot","prevIndex","findIndex","nextSlide","nextElementSibling","nextDot","nextIndex","target","closest","dot","carouselDesignAlt","navAnimate","navbar","window","pageYOffset","top","form1","designName","popUpForm","name","getElementById","textContent","showModal","setAttribute","close","form2","carouselDesign3","form3"],"mappings":"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","file":"main.bb69ef1a.js","sourceRoot":"..\\src","sourcesContent":["export default function carousel() {\r\n    const root = document.documentElement;\r\n    const elementDisplay = 7;\r\n    const content = document.querySelector(\".carousel__list\");\r\n\r\n    for (let i = 0; i < elementDisplay; i++) {\r\n    content.appendChild(content.children[i].cloneNode(true));\r\n}\r\n}","export default function carouselDesign() {\r\n    const track = document.querySelector('.carousel2__container__track');\r\n\r\n    const slides = Array.from(track.children)\r\n\r\n    const nextButton = document.querySelector('.carousel2__button--right');\r\n\r\n    const prevButton = document.querySelector('.carousel2__button--left');\r\n\r\n    const dotsNav = document.querySelector('.carousel2__nav');\r\n\r\n    const dots = Array.from(dotsNav.children);\r\n\r\n    //get the size of the slide\r\n    const slideSize = slides[0].getBoundingClientRect();\r\n\r\n    //get the width\r\n    const slideWidth = slideSize.width;\r\n\r\n    //get the height\r\n    const slideHeight = slideSize.height;\r\n\r\n\r\n\r\n    //arrange the slides next to one another\r\n    // slides[0].style.left = `${slideWidth * 0}px`;\r\n    // slides[1].style.left = `${slideWidth * 1}px`;\r\n\r\n    const setSlidePosition = (slide, index) => {\r\n        slide.style.left = `${slideWidth * index}px`;\r\n    }\r\n\r\n    //iterate the slides and assign the function\r\n    slides.forEach(setSlidePosition);\r\n\r\n    //move slide function\r\n    const moveToSlide = (track, currentSlide, targetSlide) => {\r\n        //move to next slide\r\n        track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\r\n\r\n        //update the class\r\n        currentSlide.classList.remove('current-slide');\r\n        targetSlide.classList.add('current-slide');\r\n    }\r\n\r\n    //update the dots\r\n    const updateDots = (currentDot, targetDot) => {\r\n        currentDot.classList.remove('current-slide');\r\n        targetDot.classList.add('current-slide');\r\n    }\r\n\r\n    //hiding the arrow buttons\r\n    const hideShowArrows = (slides, nextButton, prevButton, targetIndex) => {\r\n        //for hiding the button\r\n        if (targetIndex === 0) {\r\n            prevButton.classList.add('is-hidden');\r\n            nextButton.classList.remove('is-hidden');\r\n        }\r\n\r\n        else if (targetIndex === slides.length - 1) {\r\n            prevButton.classList.remove('is-hidden');\r\n            nextButton.classList.add('is-hidden');\r\n        }\r\n\r\n        else {\r\n            nextButton.classList.add('is-hidden');\r\n            prevButton.classList.add('is-hidden');\r\n        }\r\n    }\r\n\r\n\r\n    //when click left, move slides to the left\r\n    prevButton.addEventListener('click', e => {\r\n        const currentSlide = track.querySelector('.current-slide');\r\n        const prevSlide = currentSlide.previousElementSibling;\r\n        \r\n        const currentDot = dotsNav.querySelector('.current-slide');\r\n        const prevDot = currentDot.previousElementSibling;\r\n\r\n        const prevIndex = slides.findIndex(slide => slide === prevSlide);\r\n\r\n\r\n        moveToSlide(track, currentSlide, prevSlide );\r\n\r\n        updateDots(currentDot, prevDot);\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, prevIndex);\r\n\r\n    })\r\n\r\n\r\n    // when click right, move slides to the right\r\n    nextButton.addEventListener('click', e => {\r\n        //keep track of the slide\r\n        const currentSlide = track.querySelector('.current-slide');\r\n        const nextSlide = currentSlide.nextElementSibling;\r\n\r\n        const currentDot = dotsNav.querySelector('.current-slide');\r\n        const nextDot = currentDot.nextElementSibling;\r\n\r\n        const nextIndex = slides.findIndex(slide => slide === nextSlide);\r\n        \r\n        //pass args to move function\r\n        moveToSlide(track, currentSlide, nextSlide);\r\n\r\n        //update the dots\r\n        updateDots(currentDot, nextDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, nextIndex);\r\n        \r\n    })\r\n\r\n\r\n    //update the nav indicators\r\n\r\n    dotsNav.addEventListener('click', e => {\r\n        //what indicator was clicked on\r\n        //focus only the buttons\r\n        const targetDot = e.target.closest('button');\r\n\r\n        //check if null = stop the function\r\n        if(!targetDot) return;\r\n\r\n        const currentSlide = track.querySelector('.current-slide');\r\n        const currentDot = dotsNav.querySelector('.current-slide');\r\n\r\n        //return the index number\r\n        const targetIndex = dots.findIndex(dot => dot === targetDot);\r\n        // console.log(targetIndex);\r\n\r\n        const targetSlide = slides[targetIndex];\r\n\r\n        moveToSlide(track, currentSlide, targetSlide);\r\n\r\n        updateDots(currentDot, targetDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, targetIndex);\r\n        \r\n    })\r\n}","export default function carouselDesignAlt() {\r\n    const track = document.querySelector('.carousel3__container__track');\r\n\r\n    const slides = Array.from(track.children)\r\n\r\n    const nextButton = document.querySelector('.carousel3__button--right');\r\n\r\n    const prevButton = document.querySelector('.carousel3__button--left');\r\n\r\n    const dotsNav = document.querySelector('.carousel3__nav');\r\n\r\n    const dots = Array.from(dotsNav.children);\r\n\r\n    //get the size of the slide\r\n    const slideSize = slides[0].getBoundingClientRect();\r\n\r\n    //get the width\r\n    const slideWidth = slideSize.width;\r\n\r\n    //get the height\r\n    const slideHeight = slideSize.height;\r\n\r\n\r\n\r\n    //arrange the slides next to one another\r\n    // slides[0].style.left = `${slideWidth * 0}px`;\r\n    // slides[1].style.left = `${slideWidth * 1}px`;\r\n\r\n    const setSlidePosition = (slide, index) => {\r\n        slide.style.left = `${slideWidth * index}px`;\r\n    }\r\n\r\n    //iterate the slides and assign the function\r\n    slides.forEach(setSlidePosition);\r\n\r\n    //move slide function\r\n    const moveToSlide = (track, currentSlide, targetSlide) => {\r\n        //move to next slide\r\n        track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\r\n\r\n        //update the class\r\n        currentSlide.classList.remove('current-slide2');\r\n        targetSlide.classList.add('current-slide2');\r\n    }\r\n\r\n    //update the dots\r\n    const updateDots = (currentDot, targetDot) => {\r\n        currentDot.classList.remove('current-slide2');\r\n        targetDot.classList.add('current-slide2');\r\n    }\r\n\r\n    //hiding the arrow buttons\r\n    const hideShowArrows = (slides, nextButton, prevButton, targetIndex) => {\r\n        //for hiding the button\r\n        if (targetIndex === 0) {\r\n            prevButton.classList.add('is-hidden2');\r\n            nextButton.classList.remove('is-hidden2');\r\n        }\r\n\r\n        else if (targetIndex === slides.length - 1) {\r\n            prevButton.classList.remove('is-hidden2');\r\n            nextButton.classList.add('is-hidden2');\r\n        }\r\n\r\n        else {\r\n            nextButton.classList.add('is-hidden2');\r\n            prevButton.classList.add('is-hidden2');\r\n        }\r\n    }\r\n\r\n\r\n    //when click left, move slides to the left\r\n    prevButton.addEventListener('click', e => {\r\n        const currentSlide = track.querySelector('.current-slide2');\r\n        const prevSlide = currentSlide.previousElementSibling;\r\n        \r\n        const currentDot = dotsNav.querySelector('.current-slide2');\r\n        const prevDot = currentDot.previousElementSibling;\r\n\r\n        const prevIndex = slides.findIndex(slide => slide === prevSlide);\r\n\r\n\r\n        moveToSlide(track, currentSlide, prevSlide );\r\n\r\n        updateDots(currentDot, prevDot);\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, prevIndex);\r\n\r\n    })\r\n\r\n\r\n    // when click right, move slides to the right\r\n    nextButton.addEventListener('click', e => {\r\n        //keep track of the slide\r\n        const currentSlide = track.querySelector('.current-slide2');\r\n        const nextSlide = currentSlide.nextElementSibling;\r\n\r\n        const currentDot = dotsNav.querySelector('.current-slide2');\r\n        const nextDot = currentDot.nextElementSibling;\r\n\r\n        const nextIndex = slides.findIndex(slide => slide === nextSlide);\r\n        \r\n        //pass args to move function\r\n        moveToSlide(track, currentSlide, nextSlide);\r\n\r\n        //update the dots\r\n        updateDots(currentDot, nextDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, nextIndex);\r\n        \r\n    })\r\n\r\n\r\n    //update the nav indicators\r\n\r\n    dotsNav.addEventListener('click', e => {\r\n        //what indicator was clicked on\r\n        //focus only the buttons\r\n        const targetDot = e.target.closest('button');\r\n\r\n        //check if null = stop the function\r\n        if(!targetDot) return;\r\n\r\n        const currentSlide = track.querySelector('.current-slide2');\r\n        const currentDot = dotsNav.querySelector('.current-slide2');\r\n\r\n        //return the index number\r\n        const targetIndex = dots.findIndex(dot => dot === targetDot);\r\n        // console.log(targetIndex);\r\n\r\n        const targetSlide = slides[targetIndex];\r\n\r\n        moveToSlide(track, currentSlide, targetSlide);\r\n\r\n        updateDots(currentDot, targetDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, targetIndex);\r\n        \r\n    })\r\n}","// export default function navAnimate() {\r\n//     var lastScrollTop = 0;\r\n//     let navbar = document.querySelector(\".nav-bar\");\r\n\r\n//     window.addEventListener(\"scroll\", () => {\r\n//         var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n//         if (scrollTop > lastScrollTop) {\r\n//             navbar.style.top = '-4rem';\r\n//         }\r\n//         else if (window.pageYOffset === 0) {\r\n//             navbar.style.top = '-4rem';\r\n//         }\r\n//         else {\r\n//             navbar.style.top = '0';\r\n//         }\r\n\r\n//         lastScrollTop = scrollTop;\r\n//     })\r\n// }\r\n\r\nexport default function navAnimate() {\r\n    let lastScrollTop = 0;\r\n    let navbar = document.querySelector(\".nav-bar\");\r\n\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n        if (window.pageYOffset > lastScrollTop) {\r\n            navbar.style.top = '0';\r\n        }\r\n        else {\r\n            navbar.style.top = '-4rem';\r\n        }\r\n    })\r\n}","export default function form1() {\r\n\r\n    let designName = document.querySelector('.designName');\r\n    let popUpForm = document.querySelector('.pop-up');\r\n\r\n    let name = document.getElementById('title1').textContent;\r\n\r\n    document.getElementById('button1').addEventListener('click', () => {\r\n        popUpForm.showModal();\r\n        designName.setAttribute('value', name);\r\n\r\n    })\r\n\r\n    document.getElementById('close-form').addEventListener('click', () =>{\r\n        popUpForm.close();\r\n    })\r\n    \r\n}","export default function form2() {\r\n\r\n    let designName = document.querySelector('.designName');\r\n    let popUpForm = document.querySelector('.pop-up');\r\n\r\n    let name = document.getElementById('title2').textContent;\r\n\r\n    document.getElementById('button2').addEventListener('click', () => {\r\n        popUpForm.showModal();\r\n        designName.setAttribute('value', name);\r\n\r\n    })\r\n\r\n    document.getElementById('close-form').addEventListener('click', () =>{\r\n        popUpForm.close();\r\n    })\r\n    \r\n}","export default function form2() {\r\n\r\n    let designName = document.querySelector('.designName');\r\n    let popUpForm = document.querySelector('.pop-up');\r\n\r\n    let name = document.getElementById('title3').textContent;\r\n\r\n    document.getElementById('button3').addEventListener('click', () => {\r\n        popUpForm.showModal();\r\n        designName.setAttribute('value', name);\r\n\r\n    })\r\n\r\n    document.getElementById('close-form').addEventListener('click', () =>{\r\n        popUpForm.close();\r\n    })\r\n    \r\n}","export default function carouselDesign3() {\r\n    const track = document.querySelector('.design3-container');\r\n\r\n    const slides = Array.from(track.children)\r\n\r\n    const nextButton = document.querySelector('.design3-right-button');\r\n\r\n    const prevButton = document.querySelector('.design3-left-button');\r\n\r\n    const dotsNav = document.querySelector('.design3-nav');\r\n\r\n    const dots = Array.from(dotsNav.children);\r\n\r\n    //get the size of the slide\r\n    const slideSize = slides[0].getBoundingClientRect();\r\n\r\n    //get the width\r\n    const slideWidth = slideSize.width;\r\n\r\n    //get the height\r\n    const slideHeight = slideSize.height;\r\n\r\n\r\n\r\n    //arrange the slides next to one another\r\n    // slides[0].style.left = `${slideWidth * 0}px`;\r\n    // slides[1].style.left = `${slideWidth * 1}px`;\r\n\r\n    const setSlidePosition = (slide, index) => {\r\n        slide.style.left = `${slideWidth * index}px`;\r\n    }\r\n\r\n    //iterate the slides and assign the function\r\n    slides.forEach(setSlidePosition);\r\n\r\n    //move slide function\r\n    const moveToSlide = (track, currentSlide, targetSlide) => {\r\n        //move to next slide\r\n        track.style.transform = 'translateX(-' + targetSlide.style.left + ')';\r\n\r\n        //update the class\r\n        currentSlide.classList.remove('current-slide3');\r\n        targetSlide.classList.add('current-slide3');\r\n    }\r\n\r\n    //update the dots\r\n    const updateDots = (currentDot, targetDot) => {\r\n        currentDot.classList.remove('current-slide3');\r\n        targetDot.classList.add('current-slide3');\r\n    }\r\n\r\n    //hiding the arrow buttons\r\n    const hideShowArrows = (slides, nextButton, prevButton, targetIndex) => {\r\n        //for hiding the button\r\n        if (targetIndex === 0) {\r\n            prevButton.classList.add('is-hidden3');\r\n            nextButton.classList.remove('is-hidden3');\r\n        }\r\n\r\n        else if (targetIndex === slides.length - 1) {\r\n            prevButton.classList.remove('is-hidden3');\r\n            nextButton.classList.add('is-hidden3');\r\n        }\r\n\r\n        else {\r\n            nextButton.classList.add('is-hidden3');\r\n            prevButton.classList.add('is-hidden3');\r\n        }\r\n    }\r\n\r\n\r\n    //when click left, move slides to the left\r\n    prevButton.addEventListener('click', e => {\r\n        const currentSlide = track.querySelector('.current-slide3');\r\n        const prevSlide = currentSlide.previousElementSibling;\r\n        \r\n        const currentDot = dotsNav.querySelector('.current-slide3');\r\n        const prevDot = currentDot.previousElementSibling;\r\n\r\n        const prevIndex = slides.findIndex(slide => slide === prevSlide);\r\n\r\n\r\n        moveToSlide(track, currentSlide, prevSlide );\r\n\r\n        updateDots(currentDot, prevDot);\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, prevIndex);\r\n\r\n    })\r\n\r\n\r\n    // when click right, move slides to the right\r\n    nextButton.addEventListener('click', e => {\r\n        //keep track of the slide\r\n        const currentSlide = track.querySelector('.current-slide3');\r\n        const nextSlide = currentSlide.nextElementSibling;\r\n\r\n        const currentDot = dotsNav.querySelector('.current-slide3');\r\n        const nextDot = currentDot.nextElementSibling;\r\n\r\n        const nextIndex = slides.findIndex(slide => slide === nextSlide);\r\n        \r\n        //pass args to move function\r\n        moveToSlide(track, currentSlide, nextSlide);\r\n\r\n        //update the dots\r\n        updateDots(currentDot, nextDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, nextIndex);\r\n        \r\n    })\r\n\r\n\r\n    //update the nav indicators\r\n\r\n    dotsNav.addEventListener('click', e => {\r\n        //what indicator was clicked on\r\n        //focus only the buttons\r\n        const targetDot = e.target.closest('button');\r\n\r\n        //check if null = stop the function\r\n        if(!targetDot) return;\r\n\r\n        const currentSlide = track.querySelector('.current-slide3');\r\n        const currentDot = dotsNav.querySelector('.current-slide3');\r\n\r\n        //return the index number\r\n        const targetIndex = dots.findIndex(dot => dot === targetDot);\r\n        // console.log(targetIndex);\r\n\r\n        const targetSlide = slides[targetIndex];\r\n\r\n        moveToSlide(track, currentSlide, targetSlide);\r\n\r\n        updateDots(currentDot, targetDot);\r\n\r\n\r\n        //arrow functions\r\n        hideShowArrows(slides, nextButton, prevButton, targetIndex);\r\n        \r\n    })\r\n}","import \"./../scss/main.scss\"\r\nimport carousel from \"./carousel\"\r\nimport carouselDesign from './carouselDesign'\r\nimport carouselDesignAlt from './carouselDesignAlt'\r\nimport navAnimate from './navAnimation'\r\nimport form1 from './form1'\r\nimport form2 from './form2'\r\nimport form3 from './form3'\r\nimport carouselDesign3 from './carouselDesign3'\r\n\r\ncarousel();\r\ncarouselDesign();\r\ncarouselDesignAlt();\r\nnavAnimate();\r\nform1();\r\nform2();\r\nform3();\r\ncarouselDesign3();\r\n\r\n"]}